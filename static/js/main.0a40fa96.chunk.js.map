{"version":3,"sources":["resources/cloud1.svg","logo.svg","components/Welcome/WelcomePage.jsx","components/LogIn/SignIn/SignIn.jsx","components/LogIn/Registration/Registration.jsx","views/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","WelcomePage","params","className","SignIn","props","changeToSignIn","setState","signUp","changeToSignUp","handleInputChange","target","value","type","checked","name","regexFilter","emailRegex","RegExp","pwdRegex","validEmail","test","state","email","validPwd","password","showError","invalidField","alertColor","handleSignIn","toggleWelcomeScreen","continueSignUp","toggleRegistrationScreen","termsAndServices","src","Cloud","alt","this","id","style","color","placeholder","onChange","onClick","backgroundColor","role","React","Component","Registration","validateInput","firstName","length","lastName","handleSignUp","age","missingFields","HomePage","page","renderComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a40fa96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud1.5f7a1909.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nfunction WelcomePage(params) {\n    return(\n        <div className=\"container pt-5 text-center\">\n            <h2 className=\"mt-5 mb-5\">\n            Welcome!\n            </h2>\n            <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"col btn btn-primary\">Continue</div>\n                <div className=\"col-1\"></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default WelcomePage","import React from \"react\";\nimport \"./SignIn.css\";\n\nimport Cloud from \"../../../resources/cloud1.svg\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signUp: false,\n      email: \"\",\n      password: \"\",\n      termsAndServices: false,\n      alertColor: \"black\",\n      invalidField: \"\",\n      showError: false,\n    };\n  }\n\n  changeToSignIn = () => {\n    this.setState({\n      signUp: false,\n    });\n  };\n\n  changeToSignUp = () => {\n    this.setState({\n      signUp: true,\n    });\n  };\n\n  handleInputChange = ({ target }) => {\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  };\n\n  regexFilter = () => {\n    // const emailRegex = /.com$/;\n    const emailRegex = new RegExp(\".com$\");\n    const pwdRegex = new RegExp(\"^(?=.*[0-9])(?=.{8,})\");\n    let validEmail = emailRegex.test(this.state.email);\n    let validPwd = pwdRegex.test(this.state.password);\n\n    if (validEmail && validPwd) {\n      this.setState({ showError: false, invalidField: \"\" });\n      return true;\n    } else {\n      if (!validEmail && !validPwd) {\n        this.setState({ invalidField: \"Email & Password\" });\n      } else if (!validEmail) {\n        this.setState({ invalidField: \"Email\" });\n      } else {\n        this.setState({ invalidField: \"Password\" });\n      }\n      this.setState({ alertColor: \"#f55e67\", showError: true });\n      return false;\n    }\n  };\n\n  handleSignIn = () => {\n    /*\n      -import Login Service\n      -pass email and password (and other relevant details)\n\n      let loginservice.js handlelogin\n      ...\n      ...   - await? (some time delay)\n      ...\n\n      push user to welcome screen\n    */\n    if (this.regexFilter()) {\n      this.props.toggleWelcomeScreen(this.state.email);\n    }\n  };\n\n  continueSignUp = () => {\n    /*\n       pass all relevant props to this registration screen\n    */\n    if (this.regexFilter()) {\n      this.props.toggleRegistrationScreen(\n        this.state.email,\n        this.state.password\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <div className=\"BrandingContainer mb-4\">\n          <img className=\"mb-2 CloudIconClass\" src={Cloud} alt=\" filler\" />\n          <h2>Health Connect</h2>\n        </div>\n\n        {this.state.signUp ? (\n          <div className=\"PageContainer mb-4\">\n            <h4>Sign Up</h4>\n            <small className=\"text-muted\">Hi there! Nice to meet you.</small>\n          </div>\n        ) : (\n          <div className=\"PageContainer mb-4\">\n            <h4>Sign In</h4>\n            <small className=\"text-muted\">\n              Hi there! Nice to see you again.\n            </small>\n          </div>\n        )}\n\n        <div className=\"EmailInputContainer mb-4\">\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <h6 id=\"EmailHeader\" style={{ color: this.state.alertColor }}>Email:</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <input\n              className=\"col\"\n              type=\"text\"\n              placeholder=\"email@email.com\"\n              id=\"InputEmail\"\n              name=\"email\"\n              onChange={this.handleInputChange}\n            />\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n\n        <div className=\"PasswordInputContainer mb-4\">\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <h6 id=\"PasswordHeader\" style={{ color: this.state.alertColor }}>Password:</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <input\n              className=\"col\"\n              id=\"InputPassword\"\n              type=\"password\"\n              placeholder=\"*********\"\n              name=\"password\"\n              onChange={this.handleInputChange}\n            />\n            <span className=\"material-icons underlineIcon\">visibility</span>\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n\n        {this.state.signUp ? (\n          <div>\n            <div className=\"form-check mb-3 row\">\n              <div className=\"col\">\n                <input\n                  name=\"termsAndServices\"\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"TermsAndServCheckBox\"\n                  onChange={this.handleInputChange}\n                />\n                I agree to the{\" \"}\n                <b style={{ color: this.state.alertColor }}>\n                  Terms and Services\n                </b>{\" \"}\n                and{\" \"}\n                <b style={{ color: this.state.alertColor }}>Privacy Policy</b>.\n              </div>\n            </div>\n\n            {this.state.showError ? (\n              <p style={{ color: this.state.alertColor }}>\n                Invalid {this.state.invalidField}\n              </p>\n            ) : null}\n            <div className=\"SignInContainer row mb-3\">\n              <div className=\"col-2\"></div>\n              <div\n                className=\"btn btn-primary col\"\n                id=\"ContinueSignUpButton\"\n                onClick={this.continueSignUp}\n                style={{ backgroundColor: this.state.alertColor }}\n              >\n                Continue\n              </div>\n              <div className=\"col-2\"></div>\n            </div>\n\n            <div className=\"ExtraButtons row\">\n              <div className=\"col\" onClick={this.changeToSignIn}>\n                Already have an account?\n                <span className=\"text-danger pl-2\" role=\"button\">\n                  Sign In\n                </span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {this.state.showError ? (\n              <p style={{ color: this.state.alertColor }}>\n                Invalid {this.state.invalidField}\n              </p>\n            ) : null}\n            <div className=\"SignInContainer row mb-5\">\n              <div className=\"col-2\"></div>\n              <div\n                className=\"btn btn-primary col\"\n                onClick={this.handleSignIn}\n                id=\"SignInButton\"\n                style={{ backgroundColor: this.state.alertColor }}\n              >\n                Sign In\n              </div>\n              <div className=\"col-2\"></div>\n            </div>\n\n            <div className=\"ExtraButtons row pt-4\">\n              <div className=\"col-6 pl-4\" role=\"button\">\n                Forgot Password?\n              </div>\n              <div\n                className=\"col-6 text-danger\"\n                role=\"button\"\n                id=\"ChangeToSignUpButton\"\n                onClick={this.changeToSignUp}\n              >\n                Sign Up\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      age: 0,\n      alertColor: \"black\",\n      showError: false,\n      missingFields: \"Please fill in the missing fields\",\n    };\n  }\n\n  validateInput = () => {\n    if (this.state.firstName.length !== 0 && this.state.lastName.length !== 0) {\n      return true;\n    } else {\n      this.setState({ alertColor: \"#f55e67\", showError: true });\n      return false;\n    }\n  };\n\n  handleInputChange = ({ target }) => {\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  };\n\n  handleSignUp = () => {\n    /*\n        -import signup service\n\n        allow that service to handle creating new user\n\n\n        ...\n        ... await\n        ...\n\n        push user to welcome page\n      */\n    if (this.validateInput()) {\n      this.props.toggleWelcomeScreen();\n    }\n  };\n  render() {\n    return (\n      <div className=\"container pt-5 text-center\">\n        <div className=\"BrandingContainer mb-5\">\n          <i>\n            <h4>\n              First, We need a few more details about <b>you</b>.\n            </h4>\n          </i>\n        </div>\n\n        <div className=\"FirstNameInputContainer mb-4\">\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <h6 style={{ color: this.state.alertColor }}>First Name</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <input\n              className=\"col\"\n              type=\"text\"\n              placeholder=\"John\"\n              name=\"firstName\"\n              id=\"FirstNameInput\"\n              onChange={this.handleInputChange}\n            />\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n\n        <div className=\"PasswordInputContainer mb-4\">\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <h6 style={{ color: this.state.alertColor }}>Last Name:</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <input\n              className=\"col\"\n              type=\"text\"\n              placeholder=\"Smith\"\n              name=\"lastName\"\n              id=\"LastNameInput\"\n              onChange={this.handleInputChange}\n            />\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n\n        <div className=\"AgeInputContainer mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <h6 style={{ color: this.state.alertColor }}>Age:</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            <input\n              className=\"col\"\n              type=\"number\"\n              placeholder=\"44\"\n              name=\"age\"\n              id=\"AgeInput\"\n              onChange={this.handleInputChange}\n            />\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n\n        <div className=\"form-check mb-4 row\">\n          <div className=\"col\">\n            <input\n              name=\"termsAndServices\"\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"MaleInput\"\n              onChange={this.handleInputChange}\n            />\n            Male\n          </div>\n          <div className=\"col\">\n            <input\n              name=\"termsAndServices\"\n              type=\"checkbox\"\n              className=\"form-check-input \"\n              id=\"FemaleInput\"\n              onChange={this.handleInputChange}\n            />\n            Female\n          </div>\n          <div className=\"col\">\n            <input\n              name=\"termsAndServices\"\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"UndisclosedInput\"\n              onChange={this.handleInputChange}\n            />\n            Pefer not to Disclose\n          </div>\n        </div>\n\n        {this.state.showError ? (\n          <p style={{ color: this.state.alertColor }}>\n            Invalid {this.state.missingFields}\n          </p>\n        ) : null}\n\n        <div className=\"SignInContainer row mb-4\">\n          <div className=\"col-2\"></div>\n          <div\n            className=\"btn btn-primary col\"\n            onClick={this.handleSignUp}\n            id=\"ContinueRegistrationButton\"\n            style={{ backgroundColor: this.state.alertColor }}\n          >\n            Continue\n          </div>\n          <div className=\"col-2\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","import React from \"react\";\nimport WelcomePage from \"../components/Welcome/WelcomePage\";\nimport SignIn from \"../components/LogIn/SignIn/SignIn\";\nimport Registration from \"../components/LogIn/Registration/Registration\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"signIn\",\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  renderComponent() {\n    switch (this.state.page) {\n      case \"welcome\":\n        return <WelcomePage />;\n      case \"register\":\n        return (\n          <Registration\n            toggleWelcomeScreen={this.toggleWelcomeScreen}\n            email={this.state.email}\n            password={this.state.password}\n          />\n        );\n      default:\n        return (\n          <SignIn\n            toggleWelcomeScreen={this.toggleWelcomeScreen}\n            toggleRegistrationScreen={this.toggleRegistrationScreen}\n          />\n        );\n    }\n  }\n\n  toggleWelcomeScreen = (email) => {\n    this.setState({\n      email,\n      page: \"welcome\",\n    });\n  };\n\n  toggleRegistrationScreen = (email, password) => {\n    this.setState({\n      email,\n      password,\n      page: \"register\",\n    });\n  };\n\n  render() {\n    return <div>{this.renderComponent()}</div>;\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './views/HomePage'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}